// Copyright 2013-present Barefoot Networks, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/rpc/status.proto";

import "p4/config/p4info.proto";

// This package is temporary. The Device service provides the ability to push a
// P4 configuration to a device, which is needed for testing, while we come up
// with a permanent solution.

package p4.tmp;

service Device {
  rpc DeviceAssign(DeviceAssignRequest) returns (.google.rpc.Status) {
  }
  rpc DeviceRemove(DeviceRemoveRequest) returns (.google.rpc.Status) {
  }
  rpc DeviceUpdateStart(DeviceUpdateStartRequest) returns (.google.rpc.Status) {
  }
  rpc DeviceUpdateEnd(DeviceUpdateEndRequest) returns (.google.rpc.Status) {
  }
}

message DeviceAssignRequest {
  message Extras {
    map<string, string> kv = 1;
  }
  int32 device_id = 1;
  p4.config.P4Info p4info = 2;
  Extras extras = 3;  // or extension for backend specific args?
}

message DeviceRemoveRequest {
  int32 device_id = 1;
}

message DeviceUpdateStartRequest {
  int32 device_id = 1;
  p4.config.P4Info p4info = 2;
  bytes device_data = 3;  // or use extension?
}

message DeviceUpdateEndRequest {
  int32 device_id = 1;
}
